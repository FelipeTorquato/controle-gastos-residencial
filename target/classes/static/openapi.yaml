openapi: 3.0.0
info:
  title: Residential Expense Control
  version: 1.0.0
  description: API for managing users transactions.
servers:
  - url: http://localhost:8080
    description: Local server
tags:
  - name: user-controller
    description: Operations about user
  - name: transaction-controller
    description: Operations about transaction
paths:
  /v1/user:
    get:
      tags:
        - user-controller
      summary: Get all users
      description: Returns a list of all registered users.
      responses:
        '200':
          description: List of users returned successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - user-controller
      summary: Create a new user
      description: Registers a new user in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTO'
      responses:
        '201':
          description: User created successfully.
  /v1/user/{id}:
    get:
      tags:
        - user-controller
      summary: Get a user by ID
      description: Returns the details of a specific user.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: User ID
      responses:
        '200':
          description: User found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - user-controller
      summary: Delete a user by ID
      description: Deletes a specific user from the system and their transactions.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: User ID
      responses:
        '204':
          description: User deleted successfully.
  /v1/user/summary:
    get:
      tags:
        - user-controller
      summary: Get user summary
      description: Returns a summary of all users, including total revenue, total expenses, and net balance. Also returns total family revenue, expenses and net balance.
      responses:
        '200':
          description: User summary returned successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSummary'
  /v1/transaction:
    get:
      tags:
        - transaction-controller
      summary: Get all transactions
      description: Returns a list of all registered transactions.
      responses:
        '200':
          description: List of transactions returned successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      tags:
        - transaction-controller
      summary: Create a new transaction
      description: Registers a new transaction in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionTO'
      responses:
        '201':
          description: Transaction created successfully.
  /v1/transaction/{id}:
    get:
      tags:
        - transaction-controller
      summary: Get a transaction by ID
      description: Returns the details of a specific transaction.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: Transaction ID
      responses:
        '200':
          description: Transaction found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
components:
  schemas:
    UserTO:
      type: object
      properties:
        name:
          type: string
          description: User's name
          example: Felipe
        age:
          type: integer
          description: User's age
          example: 30
      required:
        - name
        - age
    User:
      type: object
      properties:
        id:
          type: integer
          description: User ID
          example: 1
        name:
          type: string
          description: User's name
          example: Felipe
        age:
          type: integer
          description: User's age
          example: 30
    UserSummary:
      type: object
      properties:
        userId:
          type: integer
          description: User ID
          example: 1
        userName:
          type: string
          description: User's name
          example: Felipe
        totalRevenue:
          type: number
          format: double
          description: Total revenue for the user
          example: 5000.0
        totalExpense:
          type: number
          format: double
          description: Total expenses for the user
          example: 3000.0
        balance:
          type: number
          format: double
          description: User's balance (revenue - expenses)
          example: 2000.0
    TransactionTO:
      type: object
      properties:
        description:
          type: string
          description: Transaction description
          example: Salary
        amount:
          type: number
          format: double
          description: Transaction amount
          example: 5000.0
        type:
          type: string
          description: Transaction type (REVENUE or EXPENSE)
          example: REVENUE
        userId:
          type: integer
          description: ID of the user associated with the transaction
          example: 1
      required:
        - description
        - amount
        - type
        - userId
    Transaction:
      type: object
      properties:
        id:
          type: integer
          description: Transaction ID
          example: 1
        description:
          type: string
          description: Transaction description
          example: Salary
        amount:
          type: number
          format: double
          description: Transaction amount
          example: 5000.0
        type:
          type: string
          description: Transaction type (REVENUE or EXPENSE)
          example: REVENUE
        user:
          $ref: '#/components/schemas/User'